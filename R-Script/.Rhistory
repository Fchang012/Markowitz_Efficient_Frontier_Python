update.packages()
update.packages(ask=FALSE)
# installing/loading the package:
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
updateR()
old.packages()
update.packages(ask = FALSE)
library(quantmod)
toCSV <- function(sym, ticker){
fileURL = paste(getwd(),"/CSV/",ticker, ".csv", sep="")
write.zoo(sym, file=fileURL, sep=",")
}
tickerList <- list()
ticker = c('VGSTX',
'PRGTX',
'PRGFX',
'PRMTX',
'TRSGX',
'PRISX',
'SPY')
getSymbols(ticker[1], from = as.Date("2005-01-01"), auto.assign = FALSE)
getSymbols('T', from = as.Date("2005-01-01"), auto.assign = FALSE)
getSymbols('T')
remove.packages('quantmod')
installed.packages()
install.packages('quantmod')
install.packages("quantmod")
install.packages('quantmod')
restart
reset
installed.packages()
library(quantmod)
installed.packages()
library(quantmod)
getSymbolLookup('T')
getSymbolLookup('VGT')
getSymbolLookup('SPY')
getSymbolLookup('F')
getSymbols("F", src='google')
F
getSymbols("F", src='yahoo')
sessionInfo()
head(F)
library(quantmod)
setwd("E:\\Shared_Files\\Fchang012\\SharpeRatio-Optimization\\R-Script")
# toCSV Function
toCSV <- function(sym, ticker){
fileURL = paste(getwd(),"/CSV/",ticker, ".csv", sep="")
write.zoo(sym, file=fileURL, sep=",")
}
# Stocks
tickerList <- list()
ticker = c('VGSTX',
'PRGTX',
'PRGFX',
'PRMTX',
'TRSGX',
'PRISX',
'SPY')
for (i in 1:length(ticker)){
tickerList[[i]] <- getSymbols(ticker[i], from = as.Date("2005-01-01"), auto.assign = FALSE, src='google')
}
library(quantmod)
# Get stock info
for (i in 1:length(ticker)){
tickerList[[i]] <- getSymbols(ticker[i], from = as.Date("2005-01-01"), auto.assign = FALSE, src='google')
}
ticker[1]
getSymbols(ticker[1], from = as.Date("2005-01-01"), auto.assign = FALSE, src='google')
getSymbols("SPY", from = as.Date("2005-01-01"), auto.assign = FALSE, src='google')
getSymbols("VGSTX", from = as.Date("2005-01-01"), auto.assign = FALSE, src='google')
getSymbols("T", from = as.Date("2005-01-01"), auto.assign = FALSE, src='google')
restart
restartR()
.r.restartR()
.rs.restartR()
library(quantmod)
.rs.restartR()
library(quantmod)
getSymbols('T')
sessionInfo()
library(quantmod)
setwd("E:\\Shared_Files\\Fchang012\\Markowitz_Efficient_Frontier_Python\\R-Script")
# toCSV Function
toCSV <- function(sym, ticker){
fileURL = paste(getwd(),"/CSV/",ticker, ".csv", sep="")
write.zoo(sym, file=fileURL, sep=",")
}
# Stocks
tickerList <- list()
ticker = c('VGSTX',
'PRGTX',
'PRGFX',
'PRMTX',
'TRSGX',
'PRISX',
'SPY')
# Get stock info
for (i in 1:length(ticker)){
tickerList[[i]] <- getSymbols(ticker[i], from = as.Date("2005-01-01"), auto.assign = FALSE, src='google')
}
# Write them to CSV files
for (j in 1:length(tickerList)){
#Rename Col
colnames(tickerList[[j]])[1] <- "Open"
colnames(tickerList[[j]])[2] <- "High"
colnames(tickerList[[j]])[3] <- "Low"
colnames(tickerList[[j]])[4] <- "Close"
colnames(tickerList[[j]])[5] <- "Volume"
colnames(tickerList[[j]])[6] <- "Adj Close"
#Change to DF
tempDF <- data.frame(Date=index(tickerList[[j]]), coredata(tickerList[[j]]))
# row.names(tempDF) <- tempDF$Dates
# tempDF$Dates <- NULL
#Write
toCSV(tempDF, ticker[j])
}
library(quantmod)
setwd("E:\\Shared_Files\\Fchang012\\Markowitz_Efficient_Frontier_Python\\R-Script")
# toCSV Function
toCSV <- function(sym, ticker){
fileURL = paste(getwd(),"/CSV/",ticker, ".csv", sep="")
write.zoo(sym, file=fileURL, sep=",")
}
# Stocks
tickerList <- list()
ticker = c('VGSTX',
'PRGTX',
'PRGFX',
'PRMTX',
'TRSGX',
'PRISX',
'SPY')
# Get stock info
for (i in 1:length(ticker)){
tickerList[[i]] <- getSymbols(ticker[i], from = as.Date("2005-01-01"), auto.assign = FALSE, src='yahoo')
}
# Write them to CSV files
for (j in 1:length(tickerList)){
#Rename Col
colnames(tickerList[[j]])[1] <- "Open"
colnames(tickerList[[j]])[2] <- "High"
colnames(tickerList[[j]])[3] <- "Low"
colnames(tickerList[[j]])[4] <- "Close"
colnames(tickerList[[j]])[5] <- "Volume"
colnames(tickerList[[j]])[6] <- "Adj Close"
#Change to DF
tempDF <- data.frame(Date=index(tickerList[[j]]), coredata(tickerList[[j]]))
# row.names(tempDF) <- tempDF$Dates
# tempDF$Dates <- NULL
#Write
toCSV(tempDF, ticker[j])
}
